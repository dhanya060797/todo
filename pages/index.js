import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React, { useState, useEffect } from "react";
import { useIsAuthenticated } from "@azure/msal-react";
import { SignInButton } from "../components/SignIn/SignInButton";
import { SignOutButton } from "../components/SignOut/SignOutButton";
import { callMsGraph, callMsGraphTodoTaskList } from "./api/graph";
import { useMsal } from "@azure/msal-react";
import { loginRequest } from "../utils/authConfig";
import styled from "styled-components";
import Todo from "../components/Todo/Todo";
import Agenda from "../components/Agenda/Agenda";

const DataContainer = styled.div`
  margin-top: 1rem;
  display: flex;
  flex-direction:row;
 
  background: #f2fafc;
  width:100%;
`;

const ToDoContainer = styled.div`
  background: white;
  padding: 1rem;
  border: #d9d9d6 1px solid;
  
  margin: 0.5rem;
  h5 {
    font-weight: 700;
    margin-bottom: 1rem;
  }
`;

const AgendaContainer = styled.div`
  background: white;
  padding: 1rem;
  border: #d9d9d6 1px solid;
 
  margin: 0.5rem;
  h5 {
    font-weight: 700;
    margin-bottom: 1rem;
  }
`;

export default function Home() {
  const isAuthenticated = useIsAuthenticated();
  const { instance, accounts, inProgress } = useMsal();
  const [accessToken, setAccessToken] = useState(null);
  const [graphData, setGraphData] = useState(null);
  const [taskData, setTaskData] = useState(null);
  const [taskId,setTaskId]= useState("");

  const name = accounts[0] && accounts[0].name;

  function RequestAccessToken() {
    const request = {
      ...loginRequest,
      account: accounts[0],
    };

    // Silently acquires an access token which is then attached to a request for Microsoft Graph data
    instance
      .acquireTokenSilent(request)
      .then((response) => {
        setAccessToken(response.accessToken);
      })
      .catch((e) => {
        instance.acquireTokenPopup(request).then((response) => {
          setAccessToken(response.accessToken);
        });
      });
  }

  function RequestTodoTaskList(taskId) {
    const request = {
      ...loginRequest,
      account: accounts[0],
    };

    // Silently acquires an access token which is then attached to a request for Microsoft Graph data
    instance
      .acquireTokenSilent(request)
      .then((response) => {
        callMsGraphTodoTaskList(response.accessToken, taskId).then(
          (response) => {
            setTaskData(response.value);
          }
        );
      })
      .catch((e) => {
        instance.acquireTokenPopup(request).then((response) => {
          callMsGraph(response.accessToken).then((response) => {
            setGraphData(response);
          });
        });
      });
  }

  function RequestTaskData() {
    const request = {
      ...loginRequest,
      account: accounts[0],
    };

    // Silently acquires an access token which is then attached to a request for Microsoft Graph data
    instance
      .acquireTokenSilent(request)
      .then((response) => {
        callMsGraph(response.accessToken).then((response) => {
          const taskId = response.value[0].id;
          setTaskId(taskId);
          RequestTodoTaskList(taskId);
        });
      })
      .catch((e) => {
        instance.acquireTokenPopup(request).then((response) => {
          callMsGraph(response.accessToken).then((response) => {
            setGraphData(response);
          });
        });
      });
  }

  useEffect(() => {
    if (isAuthenticated) {
      RequestAccessToken();
      RequestTaskData();
    }
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <p>{isAuthenticated ? <SignOutButton /> : <SignInButton />}</p>
        <DataContainer>
          <ToDoContainer>
            {taskData ? (
              <Todo tasks={taskData} taskListId={taskId} accessToken = {accessToken} />

            ) : (
              <button onClick={RequestTaskData}>Get Task List</button>
            )}
          </ToDoContainer>
          <AgendaContainer>
            <Agenda />
          </AgendaContainer>
        </DataContainer>
      </main>
    </div>
  );
}
